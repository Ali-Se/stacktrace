#  Copyright (C) 2016, Antony Polukhin.
#
# Use, modification and distribution is subject to the Boost Software License,
# Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)
#

lib dl : : <link>shared ;
lib unwind : : <link>shared ;
lib Dbghelp ;

project
  : requirements
    <toolset>msvc:<asynch-exceptions>on
    <warnings>all
    <debug-symbols>on
    <test-info>always_show_run_output
    <target-os>linux:<cxxflags>"-fvisibility=hidden"
  ;

lib test_impl_lib : test_impl.cpp : <define>BOOST_STACKTRACE_DYN_LINK <link>shared ;

local HONLY_UNW = <define>BOOST_STACKTRACE_USE_LIBUNWIND <library>unwind [ check-target-builds ../build//libunwind : : <build>no ] ;
local HONLY_BT = <define>BOOST_STACKTRACE_USE_BACKTRACE <target-os>linux:<library>dl [ check-target-builds ../build//backtrace : : <build>no ] ;
local HONLY_WIND = <define>BOOST_STACKTRACE_USE_WINDBG <library>Dbghelp [ check-target-builds ../build//WinDbg : : <build>no ] ;
local HONLY_AUTO = <target-os>linux:<library>dl <target-os>windows:<library>Dbghelp [ check-target-builds ../build//libunwind : <library>unwind ] ;
local HONLY_NOOP = <define>BOOST_STACKTRACE_USE_NOOP ;
local LINKST =  <link>shared <define>BOOST_STACKTRACE_DYN_LINK <library>.//test_impl_lib ;

test-suite stacktrace_tests
  :
    [ run test.cpp test_impl.cpp        : : : $(HONLY_UNW)  : libunwind_ho ]
    [ run test.cpp test_impl.cpp        : : : $(HONLY_BT)   : backtrace_ho ]
    [ run test.cpp test_impl.cpp        : : : $(HONLY_WIND) : windbg_ho ]
    [ run test.cpp test_impl.cpp        : : : $(HONLY_AUTO) : autodetect_ho ]
    [ run test_noop.cpp test_impl.cpp   : : : $(HONLY_NOOP) : noop_ho ]

    [ run test.cpp      : : : $(LINKST) <library>/boost/stacktrace//boost_stacktrace_libunwind    [ check-target-builds ../build//libunwind : : <build>no ]   : libunwind_lib ]
    [ run test.cpp      : : : $(LINKST) <library>/boost/stacktrace//boost_stacktrace_backtrace    [ check-target-builds ../build//backtrace : : <build>no ]   : backtrace_lib ]
    [ run test.cpp      : : : $(LINKST) <library>/boost/stacktrace//boost_stacktrace_windbg       [ check-target-builds ../build//WinDbg : : <build>no ]      : windbg_lib ]
    [ run test_noop.cpp : : : $(LINKST) <library>/boost/stacktrace//boost_stacktrace_noop : noop_lib ]

    [ run ../example/getting_started.cpp : : : $(HONLY_UNW) : libunwind_getting_started ]
    [ run ../example/getting_started.cpp : : : $(HONLY_BT) : backtrace_getting_started ]
    [ run ../example/getting_started.cpp : : : $(HONLY_WIND) : windbg_getting_started ]
    [ run ../example/getting_started.cpp : : : $(HONLY_AUTO) : auto_getting_started ]
    [ run ../example/getting_started.cpp : : : $(HONLY_NOOP) : noop_getting_started ]
  ;


